services:
  # Main Web Service
  - type: web
    name: wavelength-backend
    runtime: node
    plan: starter
    region: oregon 
    buildCommand: npm install && npm run build && npx prisma generate && npx prisma migrate deploy
    startCommand: npm start
    healthCheckPath: /api
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: wavelength-postgres
          property: connectionString
      - key: REDIS_URL
        value: # Your Upstash Redis URL
      - key: JWT_SECRET
        generateValue: true 
      - key: PORT
        value: 8080
      - key: CLOUDINARY_CLOUD_NAME
        value: 
      - key: CLOUDINARY_API_KEY
        value:
      - key: CLOUDINARY_API_SECRET
        value: 
    
  # Background Worker Service for Video Processing
  - type: worker
    name: wavelength-worker
    runtime: node
    plan: starter
    region: oregon
    buildCommand: npm install && npm run build && npx prisma generate
    startCommand: npm run start:worker
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: wavelength-postgres
          property: connectionString
      - key: REDIS_URL
        value: # Your Upstash Redis URL - set this in Render dashboard
      - key: CLOUDINARY_CLOUD_NAME
        value: # Set this in Render dashboard
      - key: CLOUDINARY_API_KEY
        value: # Set this in Render dashboard
      - key: CLOUDINARY_API_SECRET
        value: # Set this in Render dashboard

# Database
databases:
  - name: wavelength-postgres
    databaseName: wavelength
    user: wavelength
    plan: starter # Free tier PostgreSQL
    region: oregon
    ipAllowList: [] # Empty array allows all connections
